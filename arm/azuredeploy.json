{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2019-03-01-hybrid",
    "parameters": {
        "location": {
            "type": "string"
        },
        "project_name": {
            "type": "string"
        },
        "tags": {
            "type": "object",
            "defaultValue": {}
        },
        "devopsClientId": {
            "type": "string",
            // The Object ID of the Azure Connection's principal ID
            "defaultValue": "80545c3b-a968-404c-b6c1-4e789564028c"
        },
        "containerNames": {
            "type": "array",
            "defaultValue": ["dev", "prod", "integrationtestings"]
        }
    },
    "variables": {
        // Tags
        //    DefaultTag
        "defaultTag" : { "project": "[parameters('project_name')]" },
        //    Combine default tag with custom tags
        "tags": "[union(parameters('tags'), variables('defaultTag'))]",
        // Resource Names
        "resourceGroupName": "[concat(parameters('project_name'), '-management')]",
        "kvName": "[concat('kv-', parameters('project_name'), '-management')]",
        "storageName": "[concat('sa', parameters('project_name'), 'deploy')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('location')]",
            "name": "[variables('resourceGroupName')]",
            "tags": "[variables('tags')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "name": "deployment",
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"    // Delay evaluation of the expression until that deployment begins.
                                        // If not, listkeys() to get storage account access key fails
                },
                "mode": "Incremental",
                // Since scope change to 'inner', 'global' parameters/variables won't work
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageName": {
                        "value": "[variables('storageName')]"
                    },
                    "kvName": {
                        "value": "[variables('kvName')]"
                    },
                    "tags": {
                        "value": "[variables('tags')]"
                    },
                    "devopsClientId": {
                        "value": "[parameters('devopsClientId')]"
                    },
                    "containerNames": {
                        "value": "[parameters('containerNames')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "apiProfile": "2019-03-01-hybrid",
                    "parameters": {
                        "location": {
                            "type": "string"
                        },
                        "storageName": {
                            "type": "string"
                        },
                        "kvName": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "object"
                        },
                        "devopsClientId": {
                            "type": "string"
                        },
                        "containerNames": {
                            "type": "array"
                        }
                    },
                    "resources": [
                        {
                            // Storage Account
                            "type": "Microsoft.Storage/storageAccounts",
                            "name": "[parameters('storageName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "kind": "StorageV2",
                            "sku": {
                                "name": "Standard_RAGRS",
                                "tier": "Standard"
                            },
                            "properties": {
                                "accessTier": "Hot",
                                "networkAcls": {
                                    "bypass": "AzureServices",
                                    "defaultAction": "Allow"
                                }
                            }
                        },
                        // Copying doesn't support nested resource
                        //    So have to promot container build to root level
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "name": "[concat(parameters('storageName'), '/default/state-', parameters('containerNames')[copyIndex()])]",
                            "dependsOn": [
                                "[parameters('storageName')]"
                            ],
                            "copy": {
                                "name": "containers",
                                "count": "[length(parameters('containerNames'))]",
                                "mode": "parallel"
                            }
                        },
                        
                        // Key Vault
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "name": "[parameters('kvName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "sku": {
                                    "family": "A",
                                    "name": "Standard"
                                },
                                "tenantId": "[subscription().tenantId]",
                                "enabledForDeployment": true,
                                "enabledForDiskEncryption": false,
                                "enabledForTemplateDeployment": true,
                                "enableSoftDelete": false,
                                "networkAcls": {
                                    "bypass": "AzureServices"
                                },
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[parameters('devopsClientId')]",
                                        "permissions": {
                                            "secrets": [
                                                "Get",
                                                "List",
                                                "Set",
                                                "Delete",
                                                "Recover",
                                                "Backup",
                                                "Restore"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(parameters('kvName'), '/StateStorageKey')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[parameters('kvName')]",
                                "[parameters('storageName')]"
                            ],
                            "properties": {
                                "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2017-10-01').keys[0].value]"
                            }
                        }
                    ]
                }
            }
        }
    ]
}
